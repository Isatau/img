import random
from .. import loader, utils
from datetime import timedelta
from telethon import functions
from telethon.tl.types import Message

@loader.tds
class FarmIrisMod(loader.Module):
	strings = {
		'name': 'FrogKorm',
		'frkoon': '<i>‚úÖ–û—Ç–ª–æ–∂–µ–Ω–∫–∞ —Å–æ–∑–¥–∞–Ω–∞, –∫–æ—Ä–º–µ–∂ –≤ —Ö–∞–Ω–µ–π –∑–∞–ø—É—â–µ–Ω, –≤—Å—ë –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 20 —Å–µ–∫—É–Ω–¥...</i>',
		'frkoon_already': '<i>–£–∂–µ –∑–∞–ø—É—â–µ–Ω–æ</i>',
		'frkooff': '<i>‚ùå–ê–≤—Ç–æ—Ñ–∞—Ä–º–∏–Ω–≥ –≤ —Ö–∞–Ω–µ–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.\nüêû–ù–∞–¥—é–ø–∞–Ω–æ –±—É–∫–∞—Ö:</i> <b>%coins% i¬¢</b>',
		'buk': '<i>üêû–ù–∞–¥—é–ø–∞–Ω–æ –±—É–∫–∞—Ö:</i> <b>%coins% i¬¢</b>',
	}
	
	def __init__(self):
		self.name = self.strings['name']
		
	async def client_ready(self, client, db):
		self.client = client
		self.db = db
		self.myid = (await client.get_me()).id
		self.honey = 1276392130
		
	async def frkooncmd(self, message):
		status = self.db.get(self.name, "status", False)
		if status: return await message.edit(self.strings['frkoon_already'])
		self.db.set(self.name, "status", True)
		await self.client.send_message(self.honey, "–ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±—É", schedule=timedelta(seconds=20))
		await message.edit(self.strings['frkoon'])
		
	async def frkooffcmd(self, message):
		self.db.set(self.name, 'status', False)
		coins = self.db.get(self.name, 'coins', 0)
		if coins: self.db.set(self.name, 'coins', 0)
		await message.edit(self.strings['frkooff'].replace("%coins%", str(coins)))
		
	async def bukcmd(self, message):
		coins = self.db.get(self.name, "coins", 0)
		await message.edit(self.strings['buk'].replace("%coins%", str(coins)))
	
	async def watcher(self, event):
		if not isinstance(event, Message): return
		chat = utils.get_chat_id(event)
		if chat != self.honey: return
		status = self.db.get(self.name, 'status', False)
		if not status: return
		if event.raw_text == "–ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±—É":
			return await self.client.send_message(self.honey, "–ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±—É", schedule=timedelta(minutes=random.randint(1, 20)))
		if event.sender_id != self.honey: return
		if "–î—Ä—É–∂–∏—â–µ," in event.raw_text:
			args = [int(x) for x in event.raw_text.split() if x.isnumeric()]
			randelta = random.randint(20, 60)
			if len(args) == 3: delta = timedelta(hours=args[1], minutes=args[2])
			elif len(args) == 2: delta = timedelta(minutes=args[1])
			else: return
			sch = (await self.client(functions.messages.GetScheduledHistoryRequest(self.honey, 1488))).messages
			await self.client(functions.messages.DeleteScheduledMessagesRequest(self.honey, id=[x.id for x in sch]))
			return await self.client.send_message(self.honey, '–ü–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±—É', schedule=delta)
		if "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–æ—Ä–º–∏–ª–∏ –∂–∞–±—É!" in event.raw_text:
			args = event.raw_text.split()
			for x in args:
				if x[0] == '+': 
					return self.db.set(self.name, 'coins', self.db.get(self.name, 'coins', 0) + int(x[1:]))
